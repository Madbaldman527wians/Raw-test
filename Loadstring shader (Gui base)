-- Loadstring GUI Base (compactado)
return (function()
    local Players = game:GetService("Players")
    local TweenService = game:GetService("TweenService")
    local UserInputService = game:GetService("UserInputService")
    local RunService = game:GetService("RunService")
    local CollectionService = game:GetService("CollectionService")
    
    local LocalPlayer = Players.LocalPlayer
    local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
    
    -- Evitar duplicados
    for _, gui in ipairs(PlayerGui:GetChildren()) do
        if CollectionService:HasTag(gui, "ShadersGUI_Main") then gui:Destroy() end
    end
    
    -- ScreenGui
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "ShadersGUI"
    ScreenGui.ResetOnSpawn = false
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    ScreenGui.Parent = PlayerGui
    CollectionService:AddTag(ScreenGui, "ShadersGUI_Main")
    
    -- Botão Abrir/Fechar
    local ToggleBtn = Instance.new("ImageButton")
    ToggleBtn.Name = "EnableDisable"
    ToggleBtn.BackgroundTransparency = 1
    ToggleBtn.BorderSizePixel = 0
    ToggleBtn.Size = UDim2.fromOffset(68,62)
    ToggleBtn.Position = UDim2.new(1,-84,0,12)
    ToggleBtn.Image = "rbxthumb://type=Asset&w=768&h=432&id=89251645769768"
    ToggleBtn.Parent = ScreenGui
    Instance.new("UICorner", ToggleBtn)
    
    -- Janela Base
    local Base = Instance.new("Frame")
    Base.Name = "Base"
    Base.Size = UDim2.fromOffset(468,346)
    Base.Position = UDim2.new(0.5,-234,0.5,-173)
    Base.BackgroundColor3 = Color3.fromRGB(24,24,24)
    Base.BorderSizePixel = 0
    Base.Active = true
    Base.Visible = false
    Base.Parent = ScreenGui
    Instance.new("UICorner", Base).CornerRadius = UDim.new(0,25)
    
    -- Título
    local Title = Instance.new("TextLabel")
    Title.Name = "General"
    Title.BackgroundTransparency = 1
    Title.Size = UDim2.fromOffset(438,40)
    Title.Position = UDim2.fromOffset(14,6)
    Title.Text = "Shaders"
    Title.TextColor3 = Color3.new(1,1,1)
    Title.Font = Enum.Font.Gotham
    Title.TextSize = 24
    Title.Parent = Base
    
    -- Barra fina
    local Bar = Instance.new("Frame")
    Bar.BackgroundColor3 = Color3.fromRGB(54,54,54)
    Bar.BorderSizePixel = 0
    Bar.Size = UDim2.fromOffset(234,10)
    Bar.Position = UDim2.fromOffset(106,32)
    Bar.Parent = Title
    Instance.new("UICorner", Bar)
    
    -- Barra de pesquisa
    local SearchHolder = Instance.new("Frame")
    SearchHolder.Name = "Search"
    SearchHolder.BackgroundColor3 = Color3.fromRGB(49,49,49)
    SearchHolder.BorderSizePixel = 0
    SearchHolder.Size = UDim2.fromOffset(414,38)
    SearchHolder.Position = UDim2.fromOffset(30,250)
    SearchHolder.Parent = Base
    Instance.new("UICorner", SearchHolder).CornerRadius = UDim.new(0,70)
    
    local SearchBox = Instance.new("TextBox")
    SearchBox.Name = "SearchBox"
    SearchBox.BackgroundTransparency = 1
    SearchBox.ClearTextOnFocus = false
    SearchBox.TextXAlignment = Enum.TextXAlignment.Left
    SearchBox.Size = UDim2.fromOffset(378,44)
    SearchBox.Position = UDim2.fromOffset(18,-2)
    SearchBox.PlaceholderText = "Search Shaders..."
    SearchBox.TextColor3 = Color3.fromRGB(132,132,132)
    SearchBox.Font = Enum.Font.ArialBold
    SearchBox.TextSize = 14
    SearchBox.Parent = SearchHolder
    
    -- Lista de callbacks
    local ListHolder = Instance.new("ScrollingFrame")
    ListHolder.Name = "List"
    ListHolder.BackgroundTransparency = 1
    ListHolder.BorderSizePixel = 0
    ListHolder.Position = UDim2.fromOffset(10,68)
    ListHolder.Size = UDim2.fromOffset(452,170)
    ListHolder.ScrollBarThickness = 6
    ListHolder.CanvasSize = UDim2.new(0,0,0,0)
    ListHolder.Parent = Base
    
    local UIList = Instance.new("UIListLayout")
    UIList.Padding = UDim.new(0,10)
    UIList.FillDirection = Enum.FillDirection.Vertical
    UIList.HorizontalAlignment = Enum.HorizontalAlignment.Left
    UIList.SortOrder = Enum.SortOrder.LayoutOrder
    UIList.Parent = ListHolder
    
    -- DragBar
    local DragBar = Instance.new("Frame")
    DragBar.Name = "modern draggable"
    DragBar.BackgroundColor3 = Color3.fromRGB(118,118,118)
    DragBar.BackgroundTransparency = 0.4
    DragBar.BorderSizePixel = 0
    DragBar.Size = UDim2.fromOffset(276,8)
    DragBar.Position = UDim2.fromOffset(98,334)
    DragBar.Parent = Base
    Instance.new("UICorner", DragBar)
    
    -- Tween + Notify helpers
    local function makeTween(inst,time,props,style,dir)
        return TweenService:Create(inst, TweenInfo.new(time or 0.25, style or Enum.EasingStyle.Quad, dir or Enum.EasingDirection.Out), props)
    end
    local function safeNotify(title,text,dur)
        pcall(function()
            game:GetService("StarterGui"):SetCore("SendNotification",{Title=title or "Info",Text=text or "",Duration=dur or 3})
        end)
    end
    
    -- Abrir/fechar
    local isOpen=false
    local function openGUI()
        if isOpen then return end
        isOpen=true
        Base.Visible=true
        Base.BackgroundTransparency=1
        for _, c in ipairs(Base:GetDescendants()) do if c:IsA("GuiObject") then c.Visible=true end end
        makeTween(Base,0.18,{BackgroundTransparency=0}):Play()
        local origPos = Base.Position
        Base.Position = origPos + UDim2.fromOffset(0,8)
        makeTween(Base,0.18,{Position=origPos}):Play()
    end
    local function closeGUI()
        if not isOpen then return end
        isOpen=false
        local t=makeTween(Base,0.16,{BackgroundTransparency=1})
        t:Play()
        t.Completed:Wait()
        Base.Visible=false
    end
    ToggleBtn.MouseButton1Click:Connect(function()
        if isOpen then closeGUI() else openGUI() end
    end)
    
    -- Arrastar
    do
        local dragging=false
        local dragStart,startPos
        local function update(inputPos)
            local delta=inputPos-dragStart
            Base.Position=UDim2.new(startPos.X.Scale,startPos.X.Offset+delta.X,startPos.Y.Scale,startPos.Y.Offset+delta.Y)
        end
        local function inputBegan(input)
            if input.UserInputType==Enum.UserInputType.MouseButton1 or input.UserInputType==Enum.UserInputType.Touch then
                dragging=true
                dragStart=input.Position
                startPos=Base.Position
                input.Changed:Connect(function()
                    if input.UserInputState==Enum.UserInputState.End then dragging=false end
                end)
            end
        end
        local function inputChanged(input)
            if dragging and (input.UserInputType==Enum.UserInputType.MouseMovement or input.UserInputType==Enum.UserInputType.Touch) then
                update(input.Position)
            end
        end
        DragBar.InputBegan:Connect(inputBegan)
        UserInputService.InputChanged:Connect(inputChanged)
    end
    
    -- ESC fecha
    UserInputService.InputBegan:Connect(function(input,gp)
        if gp then return end
        if input.KeyCode==Enum.KeyCode.Escape and isOpen then closeGUI() end
    end)
    
    openGUI()
    
    -- Retornar referências para o script principal
    return {
        Base=Base,
        ListHolder=ListHolder,
        SearchBox=SearchBox,
        ToggleBtn=ToggleBtn,
        makeTween=makeTween,
        safeNotify=safeNotify,
        openGUI=openGUI,
        closeGUI=closeGUI
    }
end)()ListHolder.BackgroundTransparency = 1
ListHolder.BorderSizePixel = 0
ListHolder.Position = UDim2.fromOffset(10, 68)
ListHolder.Size = UDim2.fromOffset(452,170)
ListHolder.ScrollBarThickness = 6
ListHolder.CanvasSize = UDim2.new(0,0,0,0)
ListHolder.Parent = Base

local UIList = Instance.new("UIListLayout")
UIList.Padding = UDim.new(0,10)
UIList.FillDirection = Enum.FillDirection.Vertical
UIList.HorizontalAlignment = Enum.HorizontalAlignment.Left
UIList.SortOrder = Enum.SortOrder.LayoutOrder
UIList.Parent = ListHolder

-- Arrastar
local DragBar = Instance.new("Frame")
DragBar.Name = "modern draggable"
DragBar.BackgroundColor3 = Color3.fromRGB(118,118,118)
DragBar.BackgroundTransparency = 0.4
DragBar.BorderSizePixel = 0
DragBar.Size = UDim2.fromOffset(276, 8)
DragBar.Position = UDim2.fromOffset(98, 334)
DragBar.Parent = Base
Instance.new("UICorner", DragBar)

do
    local dragging = false
    local dragStart, startPos

    local function update(inputPos)
        local delta = inputPos - dragStart
        Base.Position = UDim2.new(
            startPos.X.Scale, startPos.X.Offset + delta.X,
            startPos.Y.Scale, startPos.Y.Offset + delta.Y
        )
    end

    local function inputBegan(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1
        or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = Base.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end

    local function inputChanged(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement
            or input.UserInputType == Enum.UserInputType.Touch) then
            update(input.Position)
        end
    end

    DragBar.InputBegan:Connect(inputBegan)
    UserInputService.InputChanged:Connect(inputChanged)
end

-- Abrir/fechar
local isOpen = false
local function openGUI()
    if isOpen then return end
    isOpen = true
    Base.Visible = true
    Base.BackgroundTransparency = 1
    makeTween(Base,0.18,{BackgroundTransparency=0}):Play()
end
local function closeGUI()
    if not isOpen then return end
    isOpen = false
    local t = makeTween(Base,0.16,{BackgroundTransparency=1})
    t:Play()
    t.Completed:Wait()
    Base.Visible = false
end

ToggleBtn.MouseButton1Click:Connect(function()
    if isOpen then closeGUI() else openGUI() end
end)

UserInputService.InputBegan:Connect(function(input, gp)
    if gp then return end
    if input.KeyCode == Enum.KeyCode.Escape and isOpen then
        closeGUI()
    end
end)

-- Abrir na 1ª vez
openGUI()

-- ====== Exportar ======
GUI.Base = Base
GUI.ListHolder = ListHolder
GUI.SearchBox = SearchBox
GUI.UIList = UIList
GUI.safeNotify = GUI.safeNotify
GUI.openGUI = openGUI
GUI.closeGUI = closeGUI

return GUI
