-- Loadstring GUI Base
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local CollectionService = game:GetService("CollectionService")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

local GUI = {}
local AllItems = {}

-- Util
local function safeNotify(title,text,dur)
	pcall(function()
		game:GetService("StarterGui"):SetCore("SendNotification",{Title=title or"Info",Text=text or"",Duration=dur or 3})
	end)
end
local function makeTween(inst,time,props,style,dir)
	return TweenService:Create(inst,TweenInfo.new(time or 0.25,style or Enum.EasingStyle.Quad,dir or Enum.EasingDirection.Out),props)
end
local function toLower(s) return string.lower(tostring(s or "")) end

-- Evitar duplicado
for _,gui in ipairs(PlayerGui:GetChildren()) do
	if CollectionService:HasTag(gui,"ShadersGUI_Main") then gui:Destroy() end
end

-- ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "ShadersGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.Parent = PlayerGui
CollectionService:AddTag(ScreenGui,"ShadersGUI_Main")

-- ToggleBtn
local ToggleBtn = Instance.new("ImageButton")
ToggleBtn.Name = "EnableDisable"
ToggleBtn.BackgroundTransparency = 1
ToggleBtn.BorderSizePixel = 0
ToggleBtn.Size = UDim2.fromOffset(68,62)
ToggleBtn.Position = UDim2.new(1,-84,0,12)
ToggleBtn.Image = "rbxthumb://type=Asset&w=768&h=432&id=89251645769768"
ToggleBtn.Parent = ScreenGui
Instance.new("UICorner",ToggleBtn)

-- Base
local Base = Instance.new("Frame")
Base.Name = "Base"
Base.Size = UDim2.fromOffset(468,346)
Base.Position = UDim2.new(0.5,-234,0.5,-173)
Base.BackgroundColor3 = Color3.fromRGB(24,24,24)
Base.BorderSizePixel = 0
Base.Active = true
Base.Visible = false
Base.Parent = ScreenGui
Instance.new("UICorner",Base).CornerRadius=UDim.new(0,25)

-- Title + Barra
local Title = Instance.new("TextLabel")
Title.Name = "General"
Title.BackgroundTransparency = 1
Title.Size = UDim2.fromOffset(438,40)
Title.Position = UDim2.fromOffset(14,6)
Title.Text = "Shaders"
Title.TextColor3 = Color3.new(1,1,1)
Title.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json",Enum.FontWeight.Regular,Enum.FontStyle.Normal)
Title.TextSize = 24
Title.Parent = Base
local Bar = Instance.new("Frame")
Bar.BackgroundColor3 = Color3.fromRGB(54,54,54)
Bar.BorderSizePixel = 0
Bar.Size = UDim2.fromOffset(234,10)
Bar.Position = UDim2.fromOffset(106,32)
Bar.Parent = Title
Instance.new("UICorner",Bar)

-- SearchBox
local SearchHolder = Instance.new("Frame")
SearchHolder.Name = "Search"
SearchHolder.BackgroundColor3 = Color3.fromRGB(49,49,49)
SearchHolder.BorderSizePixel = 0
SearchHolder.Size = UDim2.fromOffset(414,38)
SearchHolder.Position = UDim2.fromOffset(30,250)
SearchHolder.Parent = Base
Instance.new("UICorner",SearchHolder).CornerRadius=UDim.new(0,70)
local SearchBox = Instance.new("TextBox")
SearchBox.Name = "SearchBox"
SearchBox.BackgroundTransparency = 1
SearchBox.ClearTextOnFocus = false
SearchBox.TextXAlignment = Enum.TextXAlignment.Left
SearchBox.Size = UDim2.fromOffset(378,44)
SearchBox.Position = UDim2.fromOffset(18,-2)
SearchBox.PlaceholderText = "Search Shaders..."
SearchBox.TextColor3 = Color3.fromRGB(132,132,132)
SearchBox.FontFace = Font.new("rbxasset://fonts/families/Arial.json",Enum.FontWeight.Bold,Enum.FontStyle.Normal)
SearchBox.TextSize = 14
SearchBox.Parent = SearchHolder

-- Lista
local ListHolder = Instance.new("ScrollingFrame")
ListHolder.Name = "List"
ListHolder.BackgroundTransparency = 1
ListHolder.BorderSizePixel = 0
ListHolder.Position = UDim2.fromOffset(10,68)
ListHolder.Size = UDim2.fromOffset(452,170)
ListHolder.ScrollBarThickness = 6
ListHolder.CanvasSize = UDim2.new(0,0,0,0)
ListHolder.Parent = Base
local UIList = Instance.new("UIListLayout")
UIList.Padding=UDim.new(0,10)
UIList.FillDirection=Enum.FillDirection.Vertical
UIList.HorizontalAlignment=Enum.HorizontalAlignment.Left
UIList.SortOrder=Enum.SortOrder.LayoutOrder
UIList.Parent=ListHolder

-- DragBar
local DragBar = Instance.new("Frame")
DragBar.Name="modern draggable"
DragBar.BackgroundColor3=Color3.fromRGB(118,118,118)
DragBar.BackgroundTransparency=0.4
DragBar.BorderSizePixel=0
DragBar.Size=UDim2.fromOffset(276,8)
DragBar.Position=UDim2.fromOffset(98,334)
DragBar.Parent=Base
Instance.new("UICorner",DragBar)

-- ====== Funções de renderização e registro de callbacks ======
function GUI:RegisterCallbacks(callbacks)
	for _,it in ipairs(AllItems) do it:Destroy() end
	table.clear(AllItems)
	local low=toLower(SearchBox.Text or "")
	for _,data in ipairs(callbacks) do
		if low=="" or string.find(toLower(data.id.." "..(data.desc or "")),low,1,true) then
			local item = Instance.new("Frame")
			item.Name = "Item_"..data.id
			item.Size = UDim2.fromOffset(452,40)
			item.BackgroundColor3=Color3.fromRGB(46,46,46)
			item.BorderSizePixel=0
			Instance.new("UICorner",item)
			local label=Instance.new("TextLabel")
			label.BackgroundTransparency=1
			label.Size=UDim2.fromOffset(280,40)
			label.Position=UDim2.fromOffset(8,0)
			label.FontFace=Font.new("rbxasset://fonts/families/Arial.json",Enum.FontWeight.Bold,Enum.FontStyle.Normal)
			label.TextColor3=Color3.fromRGB(200,200,200)
			label.TextSize=14
			label.TextXAlignment=Enum.TextXAlignment.Left
			label.Text=data.id.." — "..(data.desc or "")
			label.Parent=item
			local hit=Instance.new("TextButton")
			hit.Name="Hit"
			hit.BackgroundTransparency=1
			hit.Text=""
			hit.AutoButtonColor=false
			hit.Size=UDim2.fromScale(1,1)
			hit.Parent=item
			hit.MouseButton1Click:Connect(function()
				if typeof(data.fn)=="function" then pcall(data.fn) end
			end)
			item.Parent=ListHolder
			table.insert(AllItems,item)
		end
	end
	RunService.Heartbeat:Wait()
	local totalY=0
	for _,child in ipairs(ListHolder:GetChildren()) do
		if child:IsA("Frame") then totalY+=child.AbsoluteSize.Y+(UIList.Padding.Offset) end
	end
	ListHolder.CanvasSize=UDim2.fromOffset(0,math.max(0,totalY))
end

-- ====== Abrir/Fechar ======
local isOpen=false
local function openGUI()
	if isOpen then return end
	isOpen=true
	Base.Visible=true
	Base.BackgroundTransparency=1
	makeTween(Base,0.18,{BackgroundTransparency=0}):Play()
	local origPos=Base.Position
	Base.Position=origPos+UDim2.fromOffset(0,8)
	makeTween(Base,0.18,{Position=origPos}):Play()
end
local function closeGUI()
	if not isOpen then return end
	isOpen=false
	local t1=makeTween(Base,0.16,{BackgroundTransparency=1})
	t1:Play()
	t1.Completed:Wait()
	Base.Visible=false
end
ToggleBtn.MouseButton1Click:Connect(function() if isOpen then closeGUI() else openGUI() end end)
openGUI()

-- ====== Arrastar ======
do
	local dragging=false
	local dragStart,startPos
	local function update(inputPos)
		local delta=inputPos-dragStart
		Base.Position=UDim2.new(startPos.X.Scale,startPos.X.Offset+delta.X,startPos.Y.Scale,startPos.Y.Offset+delta.Y)
	end
	local function inputBegan(input)
		if input.UserInputType==Enum.UserInputType.MouseButton1 or input.UserInputType==Enum.UserInputType.Touch then
			dragging=true
			dragStart=input.Position
			startPos=Base.Position
			input.Changed:Connect(function() if input.UserInputState==Enum.UserInputState.End then dragging=false end end)
		end
	end
	local function inputChanged(input)
		if dragging and (input.UserInputType==Enum.UserInputType.MouseMovement or input.UserInputType==Enum.UserInputType.Touch) then
			update(input.Position)
		end
	end
	DragBar.InputBegan:Connect(inputBegan)
	UserInputService.InputChanged:Connect(inputChanged)
end

-- ESC fecha
UserInputService.InputBegan:Connect(function(input,gp)
	if gp then return end
	if input.KeyCode==Enum.KeyCode.Escape and isOpen then closeGUI() end
end)

return GUIlocal ListHolder = Instance.new("ScrollingFrame")
ListHolder.Name = "List"
ListHolder.BackgroundTransparency = 1
ListHolder.BorderSizePixel = 0
ListHolder.Position = UDim2.fromOffset(10, 68)
ListHolder.Size = UDim2.fromOffset(452, 170)
ListHolder.ScrollBarThickness = 6
ListHolder.CanvasSize = UDim2.new(0,0,0,0)
ListHolder.Parent = Base

local UIList = Instance.new("UIListLayout")
UIList.Padding = UDim.new(0, 10)
UIList.FillDirection = Enum.FillDirection.Vertical
UIList.HorizontalAlignment = Enum.HorizontalAlignment.Left
UIList.SortOrder = Enum.SortOrder.LayoutOrder
UIList.Parent = ListHolder

-- Barra de arrastar
local DragBar = Instance.new("Frame")
DragBar.Name = "modern draggable"
DragBar.BackgroundColor3 = Color3.fromRGB(118,118,118)
DragBar.BackgroundTransparency = 0.4
DragBar.BorderSizePixel = 0
DragBar.Size = UDim2.fromOffset(276, 8)
DragBar.Position = UDim2.fromOffset(98, 334)
DragBar.Parent = Base
Instance.new("UICorner", DragBar)

-- Abrir/Fechar
local isOpen=false
local function openGUI()
    if isOpen then return end
    isOpen=true
    Base.Visible=true
    Base.BackgroundTransparency=1
    for _, c in ipairs(Base:GetDescendants()) do if c:IsA("GuiObject") then c.Visible=true end end
    TweenService:Create(Base, TweenInfo.new(0.18, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency=0}):Play()
    local origPos = Base.Position
    Base.Position = origPos + UDim2.fromOffset(0,8)
    TweenService:Create(Base, TweenInfo.new(0.18, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position=origPos}):Play()
end
local function closeGUI()
    if not isOpen then return end
    isOpen=false
    local t1=TweenService:Create(Base, TweenInfo.new(0.16, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency=1})
    t1:Play()
    t1.Completed:Wait()
    Base.Visible=false
end
ToggleBtn.MouseButton1Click:Connect(function()
    if isOpen then closeGUI() else openGUI() end
end)

-- Arrastar
do
    local dragging=false
    local dragStart, startPos
    local function clampPosition(pos, size)
        local screenSize = PlayerGui.AbsoluteSize
        local x = math.clamp(pos.X.Offset,0,screenSize.X-size.X.Offset)
        local y = math.clamp(pos.Y.Offset,0,screenSize.Y-size.Y.Offset)
        return UDim2.new(pos.X.Scale,x,pos.Y.Scale,y)
    end
    local function update(inputPos)
        local delta=inputPos-dragStart
        local newPos=UDim2.new(startPos.X.Scale,startPos.X.Offset+delta.X,startPos.Y.Scale,startPos.Y.Offset+delta.Y)
        Base.Position=clampPosition(newPos,Base.Size)
    end
    local function inputBegan(input)
        if input.UserInputType==Enum.UserInputType.MouseButton1 or input.UserInputType==Enum.UserInputType.Touch then
            dragging=true
            dragStart=input.Position
            startPos=Base.Position
            input.Changed:Connect(function()
                if input.UserInputState==Enum.UserInputState.End then dragging=false end
            end)
        end
    end
    local function inputChanged(input)
        if dragging and (input.UserInputType==Enum.UserInputType.MouseMovement or input.UserInputType==Enum.UserInputType.Touch) then
            update(input.Position)
        end
    end
    DragBar.InputBegan:Connect(inputBegan)
    UserInputService.InputChanged:Connect(inputChanged)
end

-- Abrir automaticamente
openGUI()

-- ESC fecha (PC)
UserInputService.InputBegan:Connect(function(input,gp)
    if gp then return end
    if input.KeyCode==Enum.KeyCode.Escape and isOpen then closeGUI() end
end)

-- ====== Retornar referências para callbacks externos ======
return {
    Base = Base,
    ListHolder = ListHolder,
    SearchBox = SearchBox,
    ToggleBtn = ToggleBtn
}
